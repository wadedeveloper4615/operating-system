#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = %cd%

CC = gcc.exe
CXX = g++.exe
AR = ar.exe
LD = g++.exe
WINDRES = windres.exe

INC = 
CFLAGS = -Wall -fexceptions
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG32 = $(INC) -I.\
CFLAGS_DEBUG32 = $(CFLAGS) -w -std=c99 -m32 -g
RESINC_DEBUG32 = $(RESINC)
RCFLAGS_DEBUG32 = $(RCFLAGS)
LIBDIR_DEBUG32 = $(LIBDIR)
LIB_DEBUG32 = $(LIB)
LDFLAGS_DEBUG32 = $(LDFLAGS) -static-libstdc++ -static-libgcc -static -m32
OBJDIR_DEBUG32 = obj\\Debug32
DEP_DEBUG32 = 
OUT_DEBUG32 = bin\\Debug32\\DiskImage32.exe

INC_RELEASE32 = $(INC) -I.\
CFLAGS_RELEASE32 = $(CFLAGS) -O3 -w -m32
RESINC_RELEASE32 = $(RESINC)
RCFLAGS_RELEASE32 = $(RCFLAGS)
LIBDIR_RELEASE32 = $(LIBDIR)
LIB_RELEASE32 = $(LIB)
LDFLAGS_RELEASE32 = $(LDFLAGS) -s -static-libstdc++ -static-libgcc -static -m32
OBJDIR_RELEASE32 = obj\\Release32
DEP_RELEASE32 = 
OUT_RELEASE32 = bin\\Release32\\DiskImage32.exe

INC_DEBUG64 = $(INC) -I.\
CFLAGS_DEBUG64 = $(CFLAGS) -w -std=c99 -m64 -g
RESINC_DEBUG64 = $(RESINC)
RCFLAGS_DEBUG64 = $(RCFLAGS)
LIBDIR_DEBUG64 = $(LIBDIR)
LIB_DEBUG64 = $(LIB)
LDFLAGS_DEBUG64 = $(LDFLAGS) -static-libstdc++ -static-libgcc -static -m64
OBJDIR_DEBUG64 = obj\\Debug64
DEP_DEBUG64 = 
OUT_DEBUG64 = bin\\Debug64\\DiskImage64.exe

INC_RELEASE64 = $(INC) -I.\
CFLAGS_RELEASE64 = $(CFLAGS) -O3 -w -m64
RESINC_RELEASE64 = $(RESINC)
RCFLAGS_RELEASE64 = $(RCFLAGS)
LIBDIR_RELEASE64 = $(LIBDIR)
LIB_RELEASE64 = $(LIB)
LDFLAGS_RELEASE64 = $(LDFLAGS) -s -static-libstdc++ -static-libgcc -static -m64
OBJDIR_RELEASE64 = obj\\Release64
DEP_RELEASE64 = 
OUT_RELEASE64 = bin\\Release64\\DiskImage64.exe

OBJ_DEBUG32 = $(OBJDIR_DEBUG32)\\print.o $(OBJDIR_DEBUG32)\\main.o $(OBJDIR_DEBUG32)\\filesystem.o $(OBJDIR_DEBUG32)\\file.o $(OBJDIR_DEBUG32)\\fat32.o $(OBJDIR_DEBUG32)\\fat16.o $(OBJDIR_DEBUG32)\\fat12.o $(OBJDIR_DEBUG32)\\ext2.o

OBJ_RELEASE32 = $(OBJDIR_RELEASE32)\\print.o $(OBJDIR_RELEASE32)\\main.o $(OBJDIR_RELEASE32)\\filesystem.o $(OBJDIR_RELEASE32)\\file.o $(OBJDIR_RELEASE32)\\fat32.o $(OBJDIR_RELEASE32)\\fat16.o $(OBJDIR_RELEASE32)\\fat12.o $(OBJDIR_RELEASE32)\\ext2.o

OBJ_DEBUG64 = $(OBJDIR_DEBUG64)\\print.o $(OBJDIR_DEBUG64)\\main.o $(OBJDIR_DEBUG64)\\filesystem.o $(OBJDIR_DEBUG64)\\file.o $(OBJDIR_DEBUG64)\\fat32.o $(OBJDIR_DEBUG64)\\fat16.o $(OBJDIR_DEBUG64)\\fat12.o $(OBJDIR_DEBUG64)\\ext2.o

OBJ_RELEASE64 = $(OBJDIR_RELEASE64)\\print.o $(OBJDIR_RELEASE64)\\main.o $(OBJDIR_RELEASE64)\\filesystem.o $(OBJDIR_RELEASE64)\\file.o $(OBJDIR_RELEASE64)\\fat32.o $(OBJDIR_RELEASE64)\\fat16.o $(OBJDIR_RELEASE64)\\fat12.o $(OBJDIR_RELEASE64)\\ext2.o

all: debug32 release32 debug64 release64

clean: clean_debug32 clean_release32 clean_debug64 clean_release64

before_debug32: 
	cmd /c if not exist bin\\Debug32 md bin\\Debug32
	cmd /c if not exist $(OBJDIR_DEBUG32) md $(OBJDIR_DEBUG32)

after_debug32: 

debug32: before_debug32 out_debug32 after_debug32

out_debug32: before_debug32 $(OBJ_DEBUG32) $(DEP_DEBUG32)
	$(LD) $(LIBDIR_DEBUG32) -o $(OUT_DEBUG32) $(OBJ_DEBUG32)  $(LDFLAGS_DEBUG32) $(LIB_DEBUG32)

$(OBJDIR_DEBUG32)\\print.o: print.cpp
	$(CXX) $(CFLAGS_DEBUG32) $(INC_DEBUG32) -c print.cpp -o $(OBJDIR_DEBUG32)\\print.o

$(OBJDIR_DEBUG32)\\main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG32) $(INC_DEBUG32) -c main.cpp -o $(OBJDIR_DEBUG32)\\main.o

$(OBJDIR_DEBUG32)\\filesystem.o: filesystem.cpp
	$(CXX) $(CFLAGS_DEBUG32) $(INC_DEBUG32) -c filesystem.cpp -o $(OBJDIR_DEBUG32)\\filesystem.o

$(OBJDIR_DEBUG32)\\file.o: file.cpp
	$(CXX) $(CFLAGS_DEBUG32) $(INC_DEBUG32) -c file.cpp -o $(OBJDIR_DEBUG32)\\file.o

$(OBJDIR_DEBUG32)\\fat32.o: fat32.cpp
	$(CXX) $(CFLAGS_DEBUG32) $(INC_DEBUG32) -c fat32.cpp -o $(OBJDIR_DEBUG32)\\fat32.o

$(OBJDIR_DEBUG32)\\fat16.o: fat16.cpp
	$(CXX) $(CFLAGS_DEBUG32) $(INC_DEBUG32) -c fat16.cpp -o $(OBJDIR_DEBUG32)\\fat16.o

$(OBJDIR_DEBUG32)\\fat12.o: fat12.cpp
	$(CXX) $(CFLAGS_DEBUG32) $(INC_DEBUG32) -c fat12.cpp -o $(OBJDIR_DEBUG32)\\fat12.o

$(OBJDIR_DEBUG32)\\ext2.o: ext2.cpp
	$(CXX) $(CFLAGS_DEBUG32) $(INC_DEBUG32) -c ext2.cpp -o $(OBJDIR_DEBUG32)\\ext2.o

clean_debug32: 
	cmd /c del /f $(OBJ_DEBUG32) $(OUT_DEBUG32)
	cmd /c rd bin\\Debug32
	cmd /c rd $(OBJDIR_DEBUG32)

before_release32: 
	cmd /c if not exist bin\\Release32 md bin\\Release32
	cmd /c if not exist $(OBJDIR_RELEASE32) md $(OBJDIR_RELEASE32)

after_release32: 

release32: before_release32 out_release32 after_release32

out_release32: before_release32 $(OBJ_RELEASE32) $(DEP_RELEASE32)
	$(LD) $(LIBDIR_RELEASE32) -o $(OUT_RELEASE32) $(OBJ_RELEASE32)  $(LDFLAGS_RELEASE32) $(LIB_RELEASE32)

$(OBJDIR_RELEASE32)\\print.o: print.cpp
	$(CXX) $(CFLAGS_RELEASE32) $(INC_RELEASE32) -c print.cpp -o $(OBJDIR_RELEASE32)\\print.o

$(OBJDIR_RELEASE32)\\main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE32) $(INC_RELEASE32) -c main.cpp -o $(OBJDIR_RELEASE32)\\main.o

$(OBJDIR_RELEASE32)\\filesystem.o: filesystem.cpp
	$(CXX) $(CFLAGS_RELEASE32) $(INC_RELEASE32) -c filesystem.cpp -o $(OBJDIR_RELEASE32)\\filesystem.o

$(OBJDIR_RELEASE32)\\file.o: file.cpp
	$(CXX) $(CFLAGS_RELEASE32) $(INC_RELEASE32) -c file.cpp -o $(OBJDIR_RELEASE32)\\file.o

$(OBJDIR_RELEASE32)\\fat32.o: fat32.cpp
	$(CXX) $(CFLAGS_RELEASE32) $(INC_RELEASE32) -c fat32.cpp -o $(OBJDIR_RELEASE32)\\fat32.o

$(OBJDIR_RELEASE32)\\fat16.o: fat16.cpp
	$(CXX) $(CFLAGS_RELEASE32) $(INC_RELEASE32) -c fat16.cpp -o $(OBJDIR_RELEASE32)\\fat16.o

$(OBJDIR_RELEASE32)\\fat12.o: fat12.cpp
	$(CXX) $(CFLAGS_RELEASE32) $(INC_RELEASE32) -c fat12.cpp -o $(OBJDIR_RELEASE32)\\fat12.o

$(OBJDIR_RELEASE32)\\ext2.o: ext2.cpp
	$(CXX) $(CFLAGS_RELEASE32) $(INC_RELEASE32) -c ext2.cpp -o $(OBJDIR_RELEASE32)\\ext2.o

clean_release32: 
	cmd /c del /f $(OBJ_RELEASE32) $(OUT_RELEASE32)
	cmd /c rd bin\\Release32
	cmd /c rd $(OBJDIR_RELEASE32)

before_debug64: 
	cmd /c if not exist bin\\Debug64 md bin\\Debug64
	cmd /c if not exist $(OBJDIR_DEBUG64) md $(OBJDIR_DEBUG64)

after_debug64: 

debug64: before_debug64 out_debug64 after_debug64

out_debug64: before_debug64 $(OBJ_DEBUG64) $(DEP_DEBUG64)
	$(LD) $(LIBDIR_DEBUG64) -o $(OUT_DEBUG64) $(OBJ_DEBUG64)  $(LDFLAGS_DEBUG64) $(LIB_DEBUG64)

$(OBJDIR_DEBUG64)\\print.o: print.cpp
	$(CXX) $(CFLAGS_DEBUG64) $(INC_DEBUG64) -c print.cpp -o $(OBJDIR_DEBUG64)\\print.o

$(OBJDIR_DEBUG64)\\main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG64) $(INC_DEBUG64) -c main.cpp -o $(OBJDIR_DEBUG64)\\main.o

$(OBJDIR_DEBUG64)\\filesystem.o: filesystem.cpp
	$(CXX) $(CFLAGS_DEBUG64) $(INC_DEBUG64) -c filesystem.cpp -o $(OBJDIR_DEBUG64)\\filesystem.o

$(OBJDIR_DEBUG64)\\file.o: file.cpp
	$(CXX) $(CFLAGS_DEBUG64) $(INC_DEBUG64) -c file.cpp -o $(OBJDIR_DEBUG64)\\file.o

$(OBJDIR_DEBUG64)\\fat32.o: fat32.cpp
	$(CXX) $(CFLAGS_DEBUG64) $(INC_DEBUG64) -c fat32.cpp -o $(OBJDIR_DEBUG64)\\fat32.o

$(OBJDIR_DEBUG64)\\fat16.o: fat16.cpp
	$(CXX) $(CFLAGS_DEBUG64) $(INC_DEBUG64) -c fat16.cpp -o $(OBJDIR_DEBUG64)\\fat16.o

$(OBJDIR_DEBUG64)\\fat12.o: fat12.cpp
	$(CXX) $(CFLAGS_DEBUG64) $(INC_DEBUG64) -c fat12.cpp -o $(OBJDIR_DEBUG64)\\fat12.o

$(OBJDIR_DEBUG64)\\ext2.o: ext2.cpp
	$(CXX) $(CFLAGS_DEBUG64) $(INC_DEBUG64) -c ext2.cpp -o $(OBJDIR_DEBUG64)\\ext2.o

clean_debug64: 
	cmd /c del /f $(OBJ_DEBUG64) $(OUT_DEBUG64)
	cmd /c rd bin\\Debug64
	cmd /c rd $(OBJDIR_DEBUG64)

before_release64: 
	cmd /c if not exist bin\\Release64 md bin\\Release64
	cmd /c if not exist $(OBJDIR_RELEASE64) md $(OBJDIR_RELEASE64)

after_release64: 

release64: before_release64 out_release64 after_release64

out_release64: before_release64 $(OBJ_RELEASE64) $(DEP_RELEASE64)
	$(LD) $(LIBDIR_RELEASE64) -o $(OUT_RELEASE64) $(OBJ_RELEASE64)  $(LDFLAGS_RELEASE64) $(LIB_RELEASE64)

$(OBJDIR_RELEASE64)\\print.o: print.cpp
	$(CXX) $(CFLAGS_RELEASE64) $(INC_RELEASE64) -c print.cpp -o $(OBJDIR_RELEASE64)\\print.o

$(OBJDIR_RELEASE64)\\main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE64) $(INC_RELEASE64) -c main.cpp -o $(OBJDIR_RELEASE64)\\main.o

$(OBJDIR_RELEASE64)\\filesystem.o: filesystem.cpp
	$(CXX) $(CFLAGS_RELEASE64) $(INC_RELEASE64) -c filesystem.cpp -o $(OBJDIR_RELEASE64)\\filesystem.o

$(OBJDIR_RELEASE64)\\file.o: file.cpp
	$(CXX) $(CFLAGS_RELEASE64) $(INC_RELEASE64) -c file.cpp -o $(OBJDIR_RELEASE64)\\file.o

$(OBJDIR_RELEASE64)\\fat32.o: fat32.cpp
	$(CXX) $(CFLAGS_RELEASE64) $(INC_RELEASE64) -c fat32.cpp -o $(OBJDIR_RELEASE64)\\fat32.o

$(OBJDIR_RELEASE64)\\fat16.o: fat16.cpp
	$(CXX) $(CFLAGS_RELEASE64) $(INC_RELEASE64) -c fat16.cpp -o $(OBJDIR_RELEASE64)\\fat16.o

$(OBJDIR_RELEASE64)\\fat12.o: fat12.cpp
	$(CXX) $(CFLAGS_RELEASE64) $(INC_RELEASE64) -c fat12.cpp -o $(OBJDIR_RELEASE64)\\fat12.o

$(OBJDIR_RELEASE64)\\ext2.o: ext2.cpp
	$(CXX) $(CFLAGS_RELEASE64) $(INC_RELEASE64) -c ext2.cpp -o $(OBJDIR_RELEASE64)\\ext2.o

clean_release64: 
	cmd /c del /f $(OBJ_RELEASE64) $(OUT_RELEASE64)
	cmd /c rd bin\\Release64
	cmd /c rd $(OBJDIR_RELEASE64)

virtual_all: debug32 release32 debug64 release64

.PHONY: before_debug32 after_debug32 clean_debug32 before_release32 after_release32 clean_release32 before_debug64 after_debug64 clean_debug64 before_release64 after_release64 clean_release64

